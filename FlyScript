local plr = game:GetService("Players").LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")
local flying = false
local speed = 5
local bodyVelocity, bodyGyro

-- Function to Switch Character Rig Type
local function switchRigType(rigType)
    local humanoidDescription = humanoid:GetAppliedDescription()
    humanoidDescription.RigType = rigType
    plr:LoadCharacterWithHumanoidDescription(humanoidDescription)
    char = plr.Character
    humanoid = char:WaitForChild("Humanoid")
    rootPart = char:WaitForChild("HumanoidRootPart")
end

-- Universal Anti-Kick Bypass for PC & Mobile Executors
local success, mt = pcall(getrawmetatable, game)
if success and mt then
    setreadonly(mt, false)
    local oldNamecall = mt.__namecall
    mt.__namecall = newcclosure(function(self, ...)
        if getnamecallmethod() == "Kick" then
            return nil
        end
        return oldNamecall(self, ...)
    end)
end

-- UI Setup
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local CloseButton = Instance.new("TextButton")
local IncreaseButton = Instance.new("TextButton")
local DecreaseButton = Instance.new("TextButton")
local SpeedLabel = Instance.new("TextLabel")
local FlyButton = Instance.new("TextButton")
local UnflyButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.Position = UDim2.new(0.1, 0, 0.5, 0)
Frame.Size = UDim2.new(0, 150, 0, 180)
Frame.Active = true
Frame.Draggable = true

CloseButton.Parent = Frame
CloseButton.Size = UDim2.new(0, 30, 0, 25)
CloseButton.Position = UDim2.new(0, 120, 0, 0)
CloseButton.Text = "X"
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextScaled = true
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)
CloseButton.TouchTap:Connect(function()
    ScreenGui:Destroy()
end)

IncreaseButton.Parent = Frame
IncreaseButton.Size = UDim2.new(0, 60, 0, 25)
IncreaseButton.Position = UDim2.new(0, 80, 0, 140)
IncreaseButton.Text = "+"
IncreaseButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
IncreaseButton.TextColor3 = Color3.new(1, 1, 1)
IncreaseButton.MouseButton1Click:Connect(function()
    speed = speed + 1
    SpeedLabel.Text = "Speed: " .. speed
end)

DecreaseButton.Parent = Frame
DecreaseButton.Size = UDim2.new(0, 60, 0, 25)
DecreaseButton.Position = UDim2.new(0, 10, 0, 140)
DecreaseButton.Text = "-"
DecreaseButton.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
DecreaseButton.TextColor3 = Color3.new(1, 1, 1)
DecreaseButton.MouseButton1Click:Connect(function()
    if speed > 1 then
        speed = speed - 1
        SpeedLabel.Text = "Speed: " .. speed
    end
end)

SpeedLabel.Parent = Frame
SpeedLabel.Size = UDim2.new(0, 130, 0, 20)
SpeedLabel.Position = UDim2.new(0, 10, 0, 110)
SpeedLabel.Text = "Speed: 5"
SpeedLabel.TextColor3 = Color3.new(1, 1, 1)

FlyButton.Parent = Frame
FlyButton.Size = UDim2.new(0, 130, 0, 30)
FlyButton.Position = UDim2.new(0, 10, 0, 10)
FlyButton.Text = "Fly"
FlyButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
FlyButton.TextColor3 = Color3.new(1, 1, 1)
FlyButton.MouseButton1Click:Connect(function()
    switchRigType(Enum.HumanoidRigType.R6)
    fly()
end)

UnflyButton.Parent = Frame
UnflyButton.Size = UDim2.new(0, 130, 0, 30)
UnflyButton.Position = UDim2.new(0, 10, 0, 50)
UnflyButton.Text = "Unfly"
UnflyButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
UnflyButton.TextColor3 = Color3.new(1, 1, 1)
UnflyButton.MouseButton1Click:Connect(function()
    unfly()
    switchRigType(Enum.HumanoidRigType.R15)
end)

-- Fly Function with Smooth Rotation and Camera-Based Altitude Control
function fly()
    if flying then return end
    flying = true
    
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = rootPart
    
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
    bodyGyro.CFrame = rootPart.CFrame
    bodyGyro.Parent = rootPart
    
    game:GetService("RunService").RenderStepped:Connect(function()
        if flying then
            local moveDirection = humanoid.MoveDirection
            local camera = workspace.CurrentCamera
            local lookDirection = camera.CFrame.LookVector
            
            if moveDirection.Magnitude > 0 then
                local flightDirection = (moveDirection * Vector3.new(1, 0, 1) + Vector3.new(0, lookDirection.Y, 0)).Unit
                bodyVelocity.Velocity = flightDirection * speed
                bodyGyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + flightDirection)
            else
                bodyVelocity.Velocity = Vector3.new(0, 0, 0) -- Stop movement when idle
            end
        end
    end)
end

-- Unfly Function
function unfly()
    flying = false
    if bodyVelocity then bodyVelocity:Destroy() end
    if bodyGyro then bodyGyro:Destroy() end
    rootPart.Velocity = Vector3.new(0, 0, 0) -- Stop character from moving
end
